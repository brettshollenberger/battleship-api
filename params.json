{"name":"Battleship API","tagline":"Hypermedia API for Battleship Games","body":"# Games\r\n\r\n## POST /games\r\nCreate a new game. All available actions will be listed under the \"actions\" key. After creating a game, the only available action is to edit the name of the first player. Actions always have an `href` to use, a link relation (`rel`), which specifies the type of request you should make (`PUT` in this case), and a human-readable prompt you can display to the user.\r\n\r\n```json\r\n{\r\n    \"links\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/games/7\",\r\n            \"rel\": \"self\"\r\n        }\r\n    ],\r\n    \"actions\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/games/7/players/13\",\r\n            \"rel\": \"edit\",\r\n            \"prompt\": \"Choose a name for Player 1\"\r\n        }\r\n    ],\r\n    \"id\": 7,\r\n    \"phase\": \"setup_players\",\r\n    \"turn\": 13,\r\n    \"players\": [\r\n        {\r\n            \"links\": [\r\n                {\r\n                    \"href\": \"http://localhost:3000/api/v1/games/7/players/13\",\r\n                    \"rel\": \"self\"\r\n                },\r\n                {\r\n                    \"href\": \"http://localhost:3000/api/v1/games/7/players/13\",\r\n                    \"rel\": \"edit\",\r\n                    \"prompt\": \"Choose a name for Player 1\"\r\n                }\r\n            ],\r\n            \"name\": null,\r\n            \"id\": 13,\r\n            \"board\": {\r\n                \"links\": [\r\n                    {\r\n                        \"href\": \"http://localhost:3000/api/v1/boards/13\",\r\n                        \"rel\": \"self\"\r\n                    }\r\n                ],\r\n                \"id\": 13,\r\n                \"state\": \"unlocked\",\r\n                \"ships\": [\r\n                    {\r\n                        \"links\": [\r\n                            {\r\n                                \"href\": \"http://localhost:3000/api/v1/boards/13/ships/61\",\r\n                                \"rel\": \"self\"\r\n                            }\r\n                        ],\r\n                        \"id\": 61,\r\n                        \"kind\": \"aircraft carrier\",\r\n                        \"state\": \"unset\",\r\n                        \"length\": 5,\r\n                        \"squares\": []\r\n                    } ...\r\n                ],\r\n                \"squares\": [\r\n                    {\r\n                        \"links\": [\r\n                            {\r\n                                \"href\": \"http://localhost:3000/api/v1/boards/13/squares/1201\",\r\n                                \"rel\": \"self\"\r\n                            }\r\n                        ],\r\n                        \"id\": 1201,\r\n                        \"x\": \"1\",\r\n                        \"y\": \"A\",\r\n                        \"state\": \"empty\"\r\n                    } ...\r\n                 ]\r\n             }\r\n         }\r\n     ]\r\n}\r\n```\r\n\r\n## GET /games/:id\r\nRetrieve a game. You'll see the same response listed above.\r\n\r\n# Players\r\n\r\n## PUT /games/:game_id/players/:id\r\n\r\n```json\r\n{\"player\": {\"name\": \"Brett\"}}\r\n```\r\nWhen you submit an edit request, you'll receive the following response. The available actions after both players have been setup will allow you to submit `PUT` requests for each ship to set its location on the board.\r\n\r\n```json\r\n{\r\n    \"actions\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/boards/13/ships/61\",\r\n            \"rel\": \"edit\",\r\n            \"prompt\": \"Set ship for Player 1\"\r\n        }, ...\r\n    ]\r\n    \"name\": \"Brett\",\r\n    \"id\": 14,\r\n    \"board\": {...}\r\n}\r\n```\r\n\r\n## GET /games/:game_id/players/:id\r\nRetrieve a player. You'll see the same response listed above.\r\n\r\n# Ships\r\n\r\n## PUT /boards/:board_id/ships/:id\r\n\r\n```json\r\n{\"ship\": {\"squares\": [{\"id\": 1, ...} {\"id\": 2, ...}]}}\r\n```\r\nWhen it's time to set ships, you can simply send the ship with all of its associations listed. As long as the ship is settable to those squares, the ship will be set. Otherwise, you'll receive an error describing why the ship cannot be set. \r\n\r\n```json\r\n{\r\n    \"links\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/boards/13/ships/65\",\r\n            \"rel\": \"self\"\r\n        }\r\n    ],\r\n    \"id\": 65,\r\n    \"kind\": \"patrol boat\",\r\n    \"state\": \"set\",\r\n    \"length\": 2,\r\n    \"squares\": [\r\n        {\r\n            \"id\": 1201,\r\n            \"x\": \"1\",\r\n            \"y\": \"A\",\r\n            \"state\": \"taken\"\r\n        },\r\n        {\r\n            \"id\": 1202,\r\n            \"x\": \"2\",\r\n            \"y\": \"A\",\r\n            \"state\": \"taken\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## GET /boards/:board_id/ships/:id\r\nRetrieve a ship. You'll see the same response listed above.\r\n\r\n# Boards\r\n\r\n## PUT /boards/:id\r\n```json\r\n{\"board\": {\"state\": \"locked\", \"squares\": [{\"id\": 1, ...} {\"id\": 2, ...}], \"ships\": [{\"id\": 1, ...}]}}\r\n```\r\n\r\nYou will receive an action to lock the board when all ships are set and do not overlap with one another. \r\n\r\n```json\r\n\"actions\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/boards/10\",\r\n            \"rel\": \"edit\",\r\n            \"prompt\": \"Lock board\"\r\n        } ...\r\n    ]\r\n```\r\nWhen you're ready to lock in all ships on a board for a player, you can submit a `PUT` request to `/boards/:id`. You can send all associations, and the board will make sure it has all ships set to the latest configuration. If all ships are set, the board will be locked. Otherwise, it will be returned unlocked. \r\n\r\n```json\r\n{\r\n    \"links\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/boards/13\",\r\n            \"rel\": \"self\"\r\n        }\r\n    ],\r\n    \"id\": 13,\r\n    \"state\": \"unlocked\",\r\n    \"ships\": [...],\r\n    \"squares\": [...]\r\n}\r\n```\r\n\r\n## GET /boards/:id\r\nRetrieve a board. You'll see the same response listed above.\r\n      \r\n# Squares\r\n\r\n## PUT /boards/:board_id/squares/:id\r\n```json\r\n{\"square\": {\"state\": \"guessed\"}}\r\n```\r\n\r\nWhen both boards are locked into place, you'll begin receiving actions for users to make guesses.\r\n\r\n```json\r\n\"actions\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/boards/10/squares/1\",\r\n            \"rel\": \"edit\",\r\n            \"prompt\": \"Player 1: Make guess\"\r\n        } ... \r\n    ]\r\n```\r\n\r\nThe action will return the square's new state:\r\n\r\n```json\r\n{\r\n  \"links\": [...],\r\n  \"actions\": [...],\r\n  \"id\": 1201,\r\n  \"x\": \"1\",\r\n  \"y\": \"A\",\r\n  \"state\": \"hit\"\r\n}\r\n```\r\n\r\n## Conclusion\r\n\r\nWhen all ships have been sunk for a given player, you'll receive the following action:\r\n```json\r\n\"actions\": [\r\n        {\r\n            \"href\": \"http://localhost:3000/api/v1/games\",\r\n            \"rel\": \"create\",\r\n            \"prompt\": \"Player 1 Victory! Play Again\"\r\n        } ... \r\n    ]\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}